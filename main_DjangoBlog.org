#+Title 为了适应自己想做的网站 对这个项目进行部分修改
admin:admin
test:qazxcvbn
test2:qazxcvbn
* TODO 尝试和实验
** DONE 实验这个网站
CLOSED: [2020-10-23 五 15:46]
:LOGBOOK:
- State "DONE"       from "TODO"       [2020-10-23 五 15:46]
:END:
*** DONE 解决邮箱登录的问题
CLOSED: [2020-10-23 五 15:42]
:LOGBOOK:
- State "DONE"       from "TODO"       [2020-10-23 五 15:42]
:END:
*** DONE 实现文章的发布功能
CLOSED: [2020-10-23 五 15:46]
:LOGBOOK:
- State "DONE"       from "TODO"       [2020-10-23 五 15:46]
:END:
*** DONE 实验功能
CLOSED: [2020-10-23 五 15:46]
:LOGBOOK:
- State "DONE"       from "TODO"       [2020-10-23 五 15:46]
:END:
** TODO 如何添加 amdin部分的修改页面
1. [X] 自己创建的那个项目可以添加
2. [X] 试一试 blog中的内容 失败
*** TODO 研究研究他的内容是怎么注册的
**** USELESS 直接从blog开始定位
CLOSED: [2020-10-24 六 11:07]
:LOGBOOK:
- State "USELESS"    from "TODO"       [2020-10-24 六 11:07] \\
  找不到内容...
:END:
#+BEGIN_SRC shell
./docker-support/README.md:| DJANGO_SECRET_KEY         | DJANGO_BLOG_CHANGE_ME                                                      | 请务必修改，建议[随机生成](https://www.random.org/passwords/?num=5&len=24&format=html&rnd=new) |
./docker-support/README.md:| DJANGO_WEROBOT_TOKEN      | DJANGO_BLOG_CHANGE_ME                                                      | 请使用自己的微信公众号通信令牌（Token）                                                        |
./docker-support/Dockerfile:ENV DJANGO_SECRET_KEY DJANGO_BLOG_CHANGE_ME
./docker-support/Dockerfile:ENV DJANGO_WXADMIN_PASSWORD DJANGO_BLOG_CHANGE_ME
./docker-support/Dockerfile:ENV DJANGO_WEROBOT_TOKEN DJANGO_BLOG_CHANGE_ME
./docs/config-en.md:You can add website configuration in **Backend->BLOG->WebSiteConfiguration**. Such as: keywords, description, Google Ad, website stats code, case number, etc.
./docs/config.md:在 *后台->BLOG->网站配置* 中,可以新增网站配置，比如关键字，描述等，以及谷歌广告，网站统计代码及备案号等等。

#+END_SRC

#+BEGIN_SRC python
./docker-support/README.md:| DJANGO_SECRET_KEY         | DJANGO_BLOG_CHANGE_ME                                                      | 请务必修改，建议[随机生成](https://www.random.org/passwords/?num=5&len=24&format=html&rnd=new) |
./docker-support/README.md:| DJANGO_WEROBOT_TOKEN      | DJANGO_BLOG_CHANGE_ME                                                      | 请使用自己的微信公众号通信令牌（Token）                                                        |
./docker-support/Dockerfile:ENV DJANGO_SECRET_KEY DJANGO_BLOG_CHANGE_ME
./docker-support/Dockerfile:ENV DJANGO_WXADMIN_PASSWORD DJANGO_BLOG_CHANGE_ME
./docker-support/Dockerfile:ENV DJANGO_WEROBOT_TOKEN DJANGO_BLOG_CHANGE_ME
./docs/config-en.md:You can add website configuration in **Backend->BLOG->WebSiteConfiguration**. Such as: keywords, description, Google Ad, website stats code, case number, etc.
./docs/config.md:在 *后台->BLOG->网站配置* 中,可以新增网站配置，比如关键字，描述等，以及谷歌广告，网站统计代码及备案号等等。


#+END_SRC
**** CANCELLED 从侧边栏 开始定位
CLOSED: [2020-10-24 六 11:10]
:LOGBOOK:
- State "CANCELLED"  from "TODO"       [2020-10-24 六 11:10] \\
  这个名字 太容易重复了  换一个内容
:END:
#+BEGIN_SRC shell
./collectedstatic/blog/js/blog.js:/** 侧边栏回到顶部 */
grep: ./.#main_DjangoBlog.org: 没有那个文件或目录
./blog/static/blog/js/blog.js:/** 侧边栏回到顶部 */
./blog/templatetags/blog_tags.py:    加载侧边栏
匹配到二进制文件 ./blog/templatetags/__pycache__/blog_tags.cpython-39.pyc
./blog/models.py:    """侧边栏,可以展示一些html内容"""
./blog/models.py:        verbose_name = '侧边栏'
./blog/models.py:    sidebar_article_count = models.IntegerField("侧边栏文章数目", default=10)
./blog/models.py:    sidebar_comment_count = models.IntegerField("侧边栏评论数目", default=5)
./blog/migrations/0001_initial.py:                ('sidebar_article_count', models.IntegerField(default=10, verbose_name='侧边栏文章数目')),
./blog/migrations/0001_initial.py:                ('sidebar_comment_count', models.IntegerField(default=5, verbose_name='侧边栏评论数目')),
./blog/migrations/0001_initial.py:                'verbose_name': '侧边栏',
./blog/migrations/0001_initial.py:                'verbose_name_plural': '侧边栏',
匹配到二进制文件 ./blog/migrations/__pycache__/0001_initial.cpython-39.pyc
匹配到二进制文件 ./blog/__pycache__/models.cpython-39.pyc
./README.md:- 侧边栏功能，最新文章，最多阅读，标签云等。


#+END_SRC
***** 一点点分析
#+BEGIN_SRC python
admin_site.register(commands, CommandsAdmin)
语句是在admin_site.py里面
commands 是 在  models 里面写的
commadnsAdmin 是在 admin 里面写的

#+END_SRC




**** TODO 从 分类 追踪吧

***** TODO 一个测试:尝试自己写一下子
**** TODO 从站点管理 反面追踪
**** TODO 百度 修改 设定文件的方法
** TODO 图片和文字的复杂结合
*** TODO 添加文字的部分
**** DONE 先看懂部分代码
CLOSED: [2020-10-23 五 16:08]
:LOGBOOK:
- State "DONE"       from "TODO"       [2020-10-23 五 16:08]
:END:
主要是找到 他的内容才能进行自己的修改

./blog/models.py:        '文章状态',
./blog/migrations/0001_initial.py:                ('status', models.CharField(choices=[('d', '草稿')

这货  就是直接写的model  然后调用的  我感觉
***** TODO 主要是
**** TODO 直接使用admin添加内容
1. [X] 定义model
2. [X] 进行注册
3. [X] 测试 失败 不知道为啥
***** TODO 先按照老齐的那个方案注册一下
**** TODO 如何将每个 clo 和其他的分开 将每个组分开
**** TODO 简单的准备内容
1. [ ] 添加app部分
2. [ ] 复制老齐的app部分
**** TODO 进行修改的测试
**** TODO 设计页面进行添加内容
*** TODO 展示内容的部分
